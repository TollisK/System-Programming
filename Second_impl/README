    2η Εργασία Προγραμματισμός Συστήματος

    Ονοματεπώνυμο: Απόστολος Καρβέλας

    Α.Μ.: 1115201800312

    Εκτέλεση προγράμματος:

    Για την εκτέλεση του προγράμματος υπάρχει αρχείο makefile, το οποίο μεταγλωττίζει τα 
    αρχεία σε εκτελέσιμο με όνομα travelMonitor και την χρησιμοποιούμε τρέχοντας την 
    εντολή make. Αφού έχει δημιουργηθεί εκτελέσιμο αρχείο, το καλούμε με την εντολή 
    ./travelMonitor -b X -s Y -i Z -m K , όπου X,Y,Z,K οι παράμετροι για το μέγεθος του buffersize 
    (με προκαθορισμένη τιμή 200 bytes), το μέγεθος του bloom filter (προκαθορισμένη τιμή 
    10000 bytes), το όνομα του φακέλου με τα δεδομένα και τον αριθμό των process Monitor 
    που θέλουμε να τρέχουν (προκαθορισμένη τιμή 2) αντίστοιχα. Στην συνέχεια περιμένει 
    εισαγωγή από τον χρήστη για την εκτέλεση μιας εντολής.

    Το bash script create_infiles.sh δέχεται ως ορίσματα το όνομα του αρχείου εισαγωγής, το 
    όνομα του φακέλου που θα φτιάξει και τον αριθμό των αρχείων στα subdirectory του 
    φακέλου. Αν δεν υπάρχει αρχείο εισαγωγής ή έχει δημιουργηθεί ήδη ο φάκελος, στέλνει 
    μήνυμα λάθους και τερματίζει το πρόγραμμα. Ύστερα, φτιάχνει τον αρχικό φάκελο και 
    διαβάζει από το αρχείο εισαγωγής κάθε λέξη, τοποθετώντας την σε μία ξεχωριστή 
    μεταβλητή. Αν δεν έχει ξαναβρεί την χώρα τότε την προσθέτει στον πίνακα και φτιάχνει  τα 
    subdirectories, βάζοντας την γραμμή στο πρώτο αρχείο. Ενώ αν υπάρχει στον πίνακα τότε 
    βρίσκει το σωστό αρχείο και προσθέτει την γραμμή. Ταυτόχρονα υπάρχει και πίνακας με 
    νούμερα για την εύρεση του αρχείο και την υλοποίηση round robin. Για την εκτέλεση του 
    χρειάζεται πρώτα η εντολή chmod +x create_infiles.sh για να είναι εκτελέσιμο.


    Αρχεία κώδικα:

    Στον φάκελο hw υπάρχουν τα .cpp και .h αρχεία από την πρώτη άσκηση για την υλοποίηση 
    του bloom filter, skip list, country list και person list με την διαφορά στο bloom.cpp/.h του 
    οποίου έχουν προστεθεί μερικές καινούργιες δομές.
    Η skip list απο την πρώτη εργασία φαίνεται πως δεν λειτουργεί σε μερικά παραδείγματα
    στα λίνουξ της σχολής, οπότε υπάρχει πιθανότα λανθασμένου αποτελέσματος. 

    Struct Record: Για την αποθήκευση των εγκρίσεων που στάλθηκαν από τον χρήστη για 
    αξιολόγηση οπότε κρατάει την χώρα, το όνομα του ιού, την ημερομηνία και το αν τελικά 
    ήταν εμβολιασμένος ή όχι. Επίσης έχει δείκτη next για την υλοποίηση λίστας.

    Struct Monitor: Δομή για την αποθήκευση των πληροφοριών που έχει κάθε παιδί Monitor, 
    και αποτελείται από τις χώρες που αναλαμβάνει, το process id του, τις τιμές writefd και 
    readfd από το open των named pipes και τα μονοπάτια αυτών.


    TravelMonitor:

    Το travelMonitor λειτουργεί ως το parent process του προγράμματος, οπότε αφού έχει 
    δεχτεί τα ορίσματα από τον χρήστη δημιουργεί 2 named pipes για κάθε Monitor με 
    μονοπάτι το “/tmp/fifo.” και τα τοποθετεί στον πίνακα με τις πληροφορίες των Monitor. 
    Στην συνέχεια, δημιουργεί τα child process με fork και ταυτόχρονα στα παιδιά καλεί την 
    Monitor με ορίσματα τα 2 μονοπάτια που τους αντιστοιχούν μέσω execvp. Για κάθε 
    Monitor κάνει open τα μονοπάτια των pipes για να αρχίσει να στέλνει και να δέχεται 
    δεδομένα μέσω εκείνων και στέλνει σε κάθε παιδί τα μεγέθη του buffer και του bloom 
    filter. Μετά μέσω του φακέλου εισαγωγής στέλνει με σύστημα round robin στα παιδιά τις 
    χώρες που θα αναλάβουν και περιμένει να του σταλθούν τα bloom filters. Αφού δεχτεί ένα 
    bloom filter από κάποιο παιδί μέσω select, παίρνει το όνομα του ιού και το bloom filter του 
    και τα ενώνει για κάθε ιό μέσω του bitwise operator OR, οπότε στην τελική έχουμε ένα νέο 
    bloom filter για κάθε ιό το οποίο αποτελείται από τα bloom filters όλων των χωρών για τον 
    ιό αυτόν.

    Κατά την εισαγωγή εντολής από τον χρήστη το πρόγραμμα πηγαίνει και στην ανάλογη if 
    παίρνοντας συνεχώς εντολές μέσω infinity loop.

    TravelRequest: Δέχεται τα ορίσματα και στην αρχή ανατρέχει την λίστα από bloom filters 
    για να βρει το όνομα του ιού και στο bloom αυτό δοκιμάζει να βρει το άτομο αυτό. Αν ο ιός 
    δεν υπάρχει ή δεν εντοπίσει τον άνθρωπο στην bloom στέλνει ότι δεν έχει εμβολιαστεί και 
    αυξάνει τον ανάλογo counter. Αλλιώς στέλνει στο παιδί που αναλαμβάνει για την χώρα 
    αυτή τον αριθμό της εντολής, το citizen id και το όνομα του ιού. Αν το παιδί απαντήσει NO 
    τότε δεν έχει εμβολιαστεί ενώ με YES δέχεται επίσης και την ημερομηνία εμβολιασμού του 
    και βλέπει αν η αίτηση για ταξίδι του χρήστη απέχει 6 μήνες από την ημερομηνία και 
    ανάλογα στέλνει και το αντίστοιχο μήνυμα. Επίσης αποθηκεύει κάθε αίτηση στην λίστα από 
    Records και το παιδί θα στείλει αν έχει εμβολιαστεί για οποιαδήποτε χώρα που 
    αναλαμβάνει (βγάζει περισσότερο νόημα από το να στέλνει μόνο για την συγκεκριμένη 
    χώρα). 

    TravelStats: Δέχεται τα ορίσματα και ανατρέχει την λίστα από Records για να βρει εκείνα 
    για την συγκεκριμένη χώρα και εκτυπώνει τα counters.

    AddVaccinationRecords: Στέλνει στο παιδί που αναλαμβάνει την χώρα ένα σήμα SIGUSR1 
    και διαβάζει ξανά το ανανεωμένο boom από το παιδί.

    SearchVaccinationStatus: Για κάθε child process στέλνει τον αριθμό της εντολής και το 
    citizen id του και δέχεται από το παιδί που τον έχει στην skip list τις πληροφορίες του και το
    για κάθε εμβολιασμό αν έχει εμβολιαστεί.

    Exit: Στέλνει τον αριθμό της εντολής σε όλα τα παιδιά και τερματίζει.


    Αφού δεν μπορούμε να στείλουμε χειροκίνητα τα σήματα στο τερματικό, στο πρόγραμμα 
    έχουν μπει 2 δοκιμαστικές αποστολές. Η πρώτη είναι όταν στο parent process τελειώσει να 
    διαβάζει τα bloom filters τότε στέλνει σε κάθε παιδί σήμα SIGINT και αφού τερματίσουν, 
    ενεργοποιείται και η SIGCHLD. Ενώ στέλνει και ένα SIGINT στον εαυτό του όταν ο χρήστης 
    εκτελεί την /exit.


    Signals: H TravelMonitor έχει 2 signals handlers:

    Child_handle: Η οποία ενεργοποιείται κάθε φορά που το πρόγραμμα λαμβάνει σήμα 
    SIGCHLD και στην αρχή βρίσκει ποιο παιδί τερμάτισε και αποθηκεύει την θέση του σε μια 
    μεταβλητή. Στην θέση αυτή μέσα στον πίνακα monitors και δημιουργηθεί το νέο child 
    process. Οπότε, κάνει fork εκτελώντας στο παιδί την Monitor μέσω execvp και αποθηκεύει 
    το νέο process id, ενώ στην συνέχεια κάνει open τα paths του Monitor και περνάει τις ίδιες 
    χώρες που θα αναλάβει το παιδί με το προηγούμενο. Τέλος διαβάζει το bloom του και τον 
    ενώνει με το προηγούμενο. Αν ο parent process στείλει σήμα SIGKILL στα παιδία η 
    child_handle δεν ενεργοποιείται.

    Sign_handler: Εκτυπώνει το log_file του προγράμματος και στέλνει σήμα SIGKILL στα παιδία 
    και τερματίζοντας το parent process.

    Monitor:

    Το Monitor εκτελείται από το travelMonitor όταν δημιουργεί child processes μέσω execvp 
    δέχονται ως ορίσματα τα μονοπάτια των named pipes. Οπότε στην αρχή κάνει open τα 2 
    μονοπάτια αυτά και διαβάζει το μέγεθος του buffer και του bloom και τα μονοπάτια των 
    χωρών που πρέπει να αναλάβει. Οπότε, στην συνέχεια για κάθε φάκελο χώρας παίρνει 
    κάθε αρχείο του και τοποθετεί τις γραμμές στις 2 δομές bloom και skip όπως στην πρώτη 
    άσκηση και στέλνει στο parent το bloom που έφτιαξε. Για τις εντολές από τον χρήστη έχει 
    ένα switch case που ανάλογα τον αριθμό της εντολής που θα του στείλει ο parent θα 
    εκτελέσει την σωστή συνάρτηση. Για την travelRequest διαβάζει το citizen id και το όνομα 
    του ιού και ψάχνει στην skip list για τον συγκεκριμένο ιό αν βρίσκεται το id αυτό 
    (ανεξαρτήτως από την χώρα προέλευσης). Για το AddVaccinationRecords αφού έχει 
    εκτελεσθεί το signal SIGUSR1 που ανανεώνει το bloom filter του, ξαναστέλνει το bloom στο 
    parent. Ενώ για  SearchVaccinationStatus διαβάζει το citizen id και στην skip list ψάχνει το 
    άτομο αυτό. Αν το βρει στέλνει στο parent τις πληροφορίες του και στην συνέχεια για κάθε 
    ιό αν έχει εμβολιαστεί ή όχι. Αλλιώς στέλνει στο age να ισούται με -1. Τέλος, για το exit 
    κάνει unlink τα μονοπάτια.

    Signals: Η monitor έχει 2 signal handlers: 

    Sigusr1_handler: Ενεργοποιείται όταν δεχτεί σήμα SIGUSR1 από το AddVaccinationRecords 
    του parent και διαβάζει τους φακέλους των χωρών που του αντιστοιχούν για να βρει τα νέα 
    αρχεία. Αν εντοπίσει κάποιο τότε το προσθέτει στο bloom filter.

    Sign_handler: Ενεργοποιείται όταν δεχτεί SIGINT ή SIGQUIT και εκτυπώνει το log_file του, 
    τερματίζοντας το πρόγραμμα.


    Γενικά για το piping: 

    Κατά την μεταφορά ενός buffer από το ένα πρόγραμμα στο άλλο, ο αποστολέας στέλνει το 
    buffer σε buffersize κομμάτια και στην συνέχεια ένα buffer με απλά ένα χαρακτήρα space, 
    οπότε ο παραλήπτης εκτελεί concatenate όλα τα κομμάτια μέχρι να βρει το space. Όταν 
    θέλει να στείλει ένα νούμερο χρησιμοποιεί το sizeof(int) αφού το buffersize πρέπει να είναι 
    μεγαλύτερο του, ενώ κατά την αποστολή ενός bloom filter στέλνει πρώτα για κάθε χώρα 
    πόσα bloom θα στείλει και στην συνέχεια κόβει το bloom σε sizeofbloom/buffersize 
    κομμάτια και ύστερα ότι άλλο απομείνει. 



